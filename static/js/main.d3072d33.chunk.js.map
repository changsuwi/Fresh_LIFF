{"version":3,"sources":["components/RoomCode/profile.png","components/Play/album.png","components/Play/bar.png","components/Play/balloon.mp3","components/Score/score.png","components/RoomCode/RoomCode.js","components/ChooseType/ChooseType.js","components/Play/Play.js","components/Score/Score.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RoomCode","react_default","a","createElement","className","placeholder","src","Profile","alt","react_router_dom","to","Component","ChooseType","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Play","Bar","Album","balloon","autoplay","Score","handleClose","window","opener","open","close","score","onClick","App","react_router","exact","path","component","from","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qWC8BzBC,mLAdX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWC,YAAY,aACxCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBE,IAAKC,IAASC,IAAI,oBACnDP,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUC,YAAY,aACvCJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAcT,EAAAC,EAAAC,cAAA,iCAlBVQ,aCwBRC,qBAtBb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFGP,wEAQhB,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,SAAQT,EAAAC,EAAAC,cAAA,wBACjBF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,SAAQT,EAAAC,EAAAC,cAAA,0BACjBF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,SAAQT,EAAAC,EAAAC,cAAA,0BACjBF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,SAAQT,EAAAC,EAAAC,cAAA,gCAlBFQ,yECuCVW,cAjCb,SAAAA,EAAYT,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAK,IAChBR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAO,GAAAF,KAAAH,KAAMJ,KACDQ,MAAQ,GAFGP,wEAQhB,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWE,IAAKiB,IAAKf,IAAI,kBACxCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,0DACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,sEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,uEAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQE,IAAKkB,IAAOhB,IAAI,kBACvCP,EAAAC,EAAAC,cAAA,SAAOG,IAAKmB,IAASC,SAAS,aAC9BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUC,YAAY,gBACvCJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,UAAST,EAAAC,EAAAC,cAAA,iCA5BXQ,sCC2BJgB,cA1Bb,SAAAA,EAAYd,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IAChBb,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,KAAMJ,KAMRe,YAAe,WACbC,OAAOC,OAAO,KACdD,OAAOE,KAAK,GAAG,SACfF,OAAOG,SARPlB,EAAKO,MAAQ,GAFGP,wEAahB,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKG,IAAK2B,IAAOzB,IAAI,eACrBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAcT,EAAAC,EAAAC,cAAA,2CACvBF,EAAAC,EAAAC,cAAA,UAAQ+B,QAASjB,KAAKW,aAAtB,gBACA3B,EAAAC,EAAAC,cAAA,mDAtBUQ,qBCwBLwB,mLAnBX,OACElC,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjCC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAW3B,IAC3CX,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWjB,IACrCrB,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWZ,IACtC1B,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAUI,KAAK,IAAI9B,GAAG,iBAXlBC,aCIE8B,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d3072d33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.b9deb3c1.png\";","module.exports = __webpack_public_path__ + \"static/media/album.6d004265.png\";","module.exports = __webpack_public_path__ + \"static/media/bar.be02c313.png\";","module.exports = __webpack_public_path__ + \"static/media/balloon.c86ec3d5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/score.9ba4dd8e.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RoomCode.css';\nimport Profile from './profile.png';\n\nclass RoomCode extends Component {\n  \n  \n  // constructor(props){\n  //   super(props);\n  //   this.state = {\n      \n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"RoomCode\">\n        <div className=\"roomEle\">\n          <div> room code </div>\n          <input className=\"roomCode\" placeholder=\"ex:12345\"/>\n          <img className=\"roomCodeProfile\" src={Profile} alt=\"Profile picture\"/>\n          <input className=\"profile\" placeholder=\"Nickname\"/>\n          <Link to=\"/ChooseType\"><button>Enter</button></Link>\n        </div>\n       </div>\n    );\n  }\n}\n\nexport default RoomCode;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ChooseType.css';\n\nclass ChooseType extends Component {\n  \n  \n  constructor(props){\n    super(props);\n    this.state = {\n      \n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ChooseType\">\n        <div className=\"ChooseEle\">\n          <div>Choose a category!</div>\n          <Link to=\"/Play\"><button>K-pop</button></Link>\n          <Link to=\"/Play\"><button>Hip-hop</button></Link>\n          <Link to=\"/Play\"><button>Country</button></Link>\n          <Link to=\"/Play\"><button>90's</button></Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseType;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Play.css';\nimport Album from './album.png';\nimport Bar from './bar.png';\nimport balloon from './balloon.mp3';\n\nclass Play extends Component {\n  \n  \n  constructor(props){\n    super(props);\n    this.state = {\n      \n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Play\">\n        <div className=\"playEle\">\n          <img className=\"progress\" src={Bar} alt=\"your progress\"/>\n          <div className=\"texts\">\n            <div className=\"text\">第一首：如果遇見你</div>\n            <div className=\"text\">第二首：聽見下雨的聲音</div>\n            <div className=\"text\">第三首：＿＿＿＿＿＿＿</div>\n          </div>\n          <img className=\"album\" src={Album} alt=\"album picture\"/>\n          <audio src={balloon} autoplay=\"autoplay\"/>  \n          <div className=\"time\">\n            <div>倒數計時</div>\n            <div>00:30</div>\n          </div>\n          <div className=\"playAnswer\">\n            <input className=\"profile\" placeholder=\"Your answer\"/>\n            <Link to=\"/Score\"><button> Go </button></Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Play;\n","import React, { Component } from 'react';\nimport './Score.css';\nimport { Link } from 'react-router-dom';\nimport score from './score.png';\n\nclass Score extends Component {\n  \n  \n  constructor(props){\n    super(props);\n    this.state = {\n      \n    }\n  }\n\n  handleClose =  () => {\n    window.opener=null;\n    window.open('','_self');\n    window.close();\n  } \n  render() {\n    return (\n      <div className=\"Score\">\n        <img src={score} alt=\"your score\"/>\n        <div className=\"scoreButton\">\n          <Link to=\"/ChooseType\"><button>再玩一次</button></Link>\n          <button onClick={this.handleClose}>離開</button>\n          <button>分享成果</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Score;\n","import React, { Component } from 'react';\nimport './App.css';\nimport RoomCode from './components/RoomCode/RoomCode';\nimport ChooseType from './components/ChooseType/ChooseType';\nimport Play from './components/Play/Play';\nimport Score from './components/Score/Score';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={RoomCode} />\n              <Route exact path=\"/ChooseType\" component={ChooseType} />\n              <Route exact path=\"/Play\" component={Play} />\n              <Route exact path=\"/Score\" component={Score} />\n              <Redirect from=\"/\" to=\"/\" />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      // <div>hello world</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}